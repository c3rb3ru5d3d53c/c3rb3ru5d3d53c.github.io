<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Malware Hell</title><link>https://c3rb3ru5d3d53c.github.io/</link><description>Recent content on Malware Hell</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>&amp;copy; 2022 &lt;a href="https://twitter.com/c3rb3ru5d3d53c">c3rb3ru5d3d53c&lt;/a></copyright><lastBuildDate>Thu, 04 Aug 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://c3rb3ru5d3d53c.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>A Reverse Engineering Guide for Rust Binaries</title><link>https://c3rb3ru5d3d53c.github.io/documents/malware-reversing-rust/</link><pubDate>Thu, 04 Aug 2022 00:00:00 +0000</pubDate><guid>https://c3rb3ru5d3d53c.github.io/documents/malware-reversing-rust/</guid><description>Introduction The Rust programming language is like rust on a vehicle for malware analysts and reverse engineers. The adoption of the language by malware authors spreads like cancer the longer it is in active development. This is due to convenient static linking and support for many operating systems, yielding a binary with little to no dependencies. These features are excellent for the distribution of malware. Every time we need to reverse engineer a Rust binary, we would rather embrace the sweet release of death.</description></item><item><title>What is a DLL?</title><link>https://c3rb3ru5d3d53c.github.io/documents/what-is-a-dll/</link><pubDate>Wed, 20 Jul 2022 00:00:00 +0000</pubDate><guid>https://c3rb3ru5d3d53c.github.io/documents/what-is-a-dll/</guid><description>Introduction Hey everybody, it&amp;rsquo;s cerberus and welcome to malware hell. Today we are going to do a whiteboard session on what a DLL is and why it is important to malware reverse engineering and analysis.
Dynamic-link library (DLL) is Microsoft&amp;rsquo;s implementation of the shared library concept in the Microsoft Windows and OS/2 operating systems. These libraries usually have the file extension DLL, OCX (for libraries containing ActiveX controls), or DRV (for legacy system drivers).
Describe PE File Format Explain RVAs Explain Dynamic Linking Demonstrate DLL usage Dynamic Linking Dynamic linking means that the code for some external routines is located and loaded when the program is first run.</description></item><item><title>Reversing Additional Lockbit 3.0 API Hashing</title><link>https://c3rb3ru5d3d53c.github.io/malware-blog/lockbit-v3-api-hashing/</link><pubDate>Wed, 13 Jul 2022 00:00:00 +0000</pubDate><guid>https://c3rb3ru5d3d53c.github.io/malware-blog/lockbit-v3-api-hashing/</guid><description>I was watching @herrcore&amp;rsquo;s OALabs stream on Lockbit 3.0. After he wrote a utility to decrypt additional data from the ransomware, he noticed one of the buffers was a Portable Executable (PE) file. It had an interesting API hashing routine, we would be reversing for the next stream.
I decided to have a closer look. üòÑ
Analysis This is an interesting sample, I have not mapped out its full functionality yet.
However, I was able to get a decent amount of reversing done, which should give us more of an insight.</description></item><item><title>Deobfuscating Scripts</title><link>https://c3rb3ru5d3d53c.github.io/documents/deobfuscating-scripts/</link><pubDate>Sat, 09 Jul 2022 00:00:00 +0000</pubDate><guid>https://c3rb3ru5d3d53c.github.io/documents/deobfuscating-scripts/</guid><description>I reached out on Twitter asking for suggestions on new topics to cover.
One of these topics was on deobfuscation of scripts. This is a great topic as this skill can generally be learned by anyone who understands writing code or scripts. I&amp;rsquo;ll cover more advanced topics as I move forward with these guides.
NOTE: This guide does not cover all aspects of deobfuscation. However, once you have finished reading and practicing the concepts in this guide, you will be able to build some of your own techniques to better expand your skills.</description></item><item><title>Handling Malware Samples</title><link>https://c3rb3ru5d3d53c.github.io/documents/malware-sample-handling/</link><pubDate>Thu, 07 Jul 2022 00:00:00 +0000</pubDate><guid>https://c3rb3ru5d3d53c.github.io/documents/malware-sample-handling/</guid><description>When you are first starting out in malware analysis or reverse engineering, it can be a very nerve racking experience to deal with malware samples. You might always have that little voice in your head thinking&amp;hellip;
What if I double click by accident?
What if I press ENTER when I was not supposed to?
What if the malware breaks out of the VM?
Malware is bad
You don&amp;rsquo;t want to be infected, do you?
If you have these little voices in your head, you are not alone.</description></item><item><title>Malware Analysis and Reverse Engineering Workflow</title><link>https://c3rb3ru5d3d53c.github.io/documents/malware-analysis-reversing-workflow/</link><pubDate>Wed, 06 Jul 2022 00:00:00 +0000</pubDate><guid>https://c3rb3ru5d3d53c.github.io/documents/malware-analysis-reversing-workflow/</guid><description>I have noticed that there is a lot of material on individual parts of the malware analysis and reverse engineering process. However, they do not cover really what someone&amp;rsquo;s workflow is from start to finish. This guide will be an overview of my general workflow.
Prerequsites Ensure you have finished setting up your malware lab This guide is not how everyone does it, everyone will refine their own workflow, which works best for them overtime. Methodology When working on malware it is good to have a methodology to guide your operations.</description></item><item><title>Making Fun of Your APT Malware - Bitter APT Using ZxxZ Backdoor to Target Pakistan Public Accounts Committee</title><link>https://c3rb3ru5d3d53c.github.io/malware-blog/2022-07-04-bitter-apt-zxxz-backdoor/</link><pubDate>Sun, 26 Jun 2022 00:00:00 +0000</pubDate><guid>https://c3rb3ru5d3d53c.github.io/malware-blog/2022-07-04-bitter-apt-zxxz-backdoor/</guid><description>Introduction Bitter APT (T-APT-17/APT-C-08/Orange Yali) is a group known to operate in South Asia and is suspected to be an Indian üáÆ‚Äçüá≥ APT. They primarialy target Pakistan üáµ‚Äçüá∞, Saudi Arabia üá∏‚Äçüá¶ and China.
Analysis This will be an indepth analysis of Bitter APT&amp;rsquo;s backdoor named ZxxZ. We will cover almost every aspect of the attack chain including, exploit shellcode analysis, building our own C2 server to communicate with the malware and writing detection signatures for the community.</description></item><item><title>CheatSheet</title><link>https://c3rb3ru5d3d53c.github.io/documents/cheatsheet/</link><pubDate>Fri, 24 Jun 2022 00:00:00 +0000</pubDate><guid>https://c3rb3ru5d3d53c.github.io/documents/cheatsheet/</guid><description>SHA256 Files in Folder find . -maxdepth 1 -type f | while read i; mv $i (sha256sum $i | grep -Po '^[a-f0-9]+'); end Download Hashes from Clipboard xclip -o -s -c | xargs -I {} echo &amp;quot;vt download {}&amp;quot; | parallel -j 8 {} Binlex Top 10 Traits find samples/ -type f | while read i; binlex -i $i \| jq -r 'trait' | sort | uniq; end | sort | uniq -c | sort -rn | head -10 Capture PCAP tshark -i lo -F libpcap -w (date +&amp;quot;%Y-%m-%d&amp;quot;).</description></item><item><title>Video Editing on Linux Guide</title><link>https://c3rb3ru5d3d53c.github.io/documents/linux-video-editing/</link><pubDate>Thu, 23 Jun 2022 00:00:00 +0000</pubDate><guid>https://c3rb3ru5d3d53c.github.io/documents/linux-video-editing/</guid><description>Video editing in Linux has always been a hot topic in the community. It also has been discussed by a lot of Linux content creators. I have been using Linux for the past 10 years as my operating system for everything I do. With this has come challenges, of course years ago it was virtually impossible.
The landscape has shifted for Linux content creators. You really no longer need to purchase Davanchi Studio. The best new player on the block I&amp;rsquo;d recommend is Blender.</description></item><item><title>From Nothing to a Career in Cyber</title><link>https://c3rb3ru5d3d53c.github.io/personal-blog/2022-06-21-a-career-from-nothing/</link><pubDate>Tue, 21 Jun 2022 00:00:00 +0000</pubDate><guid>https://c3rb3ru5d3d53c.github.io/personal-blog/2022-06-21-a-career-from-nothing/</guid><description>In this blog, I&amp;rsquo;ll discuss some of my troubles in life getting started and how I really got the drive to move forward.
How It Started I took advanced placement courses all throughout high school, I had one goal at this point, get a computer science degree. At this time universities were really telling parents that their kids need a secondary education. This was all happening between the year 2000 and 2005. I was told that going to university is the only option after high school.</description></item><item><title>Malware Analysis for Beginners</title><link>https://c3rb3ru5d3d53c.github.io/documents/malware-analysis-beginner-guide/</link><pubDate>Tue, 21 Jun 2022 00:00:00 +0000</pubDate><guid>https://c3rb3ru5d3d53c.github.io/documents/malware-analysis-beginner-guide/</guid><description>Hello everyone, malware analysis is a hot topic lately as the threats we work against in the cybersecurity industry become more advanced with each passing day. This creates demand for these types of skills in the industry. I&amp;rsquo;ve mentored and taught many malware analysts and what I&amp;rsquo;ve learned from this experience do not align with certifications. Although certifications are helpful, they are not what I&amp;rsquo;d recommend starting with from scratch. This guide aims to get you started in malware analysis without having to pay anyone any money.</description></item><item><title>KVM Malware Lab Guide</title><link>https://c3rb3ru5d3d53c.github.io/documents/kvm-malware-lab/</link><pubDate>Sat, 18 Jun 2022 00:00:00 +0000</pubDate><guid>https://c3rb3ru5d3d53c.github.io/documents/kvm-malware-lab/</guid><description>This is my guide for setting up your very own malware lab using KVM.
Before you start, this guide assumes you have an AirVPN subscription or another equivalent one, which provides a .ovpn file.
NOTE: I like to have internet enabled on my analysis VMs and this comes with extra security considerations and potential risk if you do not perform the setup correctly. It is recommended that you have your KVM host machine on a DMZ.</description></item><item><title>Malware Analysis Tool List</title><link>https://c3rb3ru5d3d53c.github.io/documents/malware-analysis-tools/</link><pubDate>Fri, 17 Jun 2022 00:00:00 +0000</pubDate><guid>https://c3rb3ru5d3d53c.github.io/documents/malware-analysis-tools/</guid><description>This document contains an extensive list of the malware analysis tools I use on a regular basis. üòÑ
Tool List tool description x64dbg Debugger Ghidra Reverse Engineering DNSpy Reverse Engineering windbg Debugging Python Scripting OWASP Zap Web Debugging HxD Hex Editing HashMyFiles File Hashing VSCodium Coding PEStudio Triage IDR Interactive Delphi Reconstructor PEBear PE Editing and Triage pe-seive Malware Unpacking Detect it Easy Triage TOR Dark Web Browsing Cutter Reverse Engineering VB Decompiler Pro Reverse Engineering VB Samples Resource Hacker Triage and Unpacking dControl Disabling Windows Defender scDbg Shellcode Emulation xlmDeobfuscator Deobfuscation of XLM Maldocs oletools Maldoc Analysis Sysinternals Dynamic Analysis Nauz File Detector Triage PDF Stream Dumper PDF Maldoc Analysis Wireshark Network Analysis MalUnpack Unpacking Malware Orca MSI Editor 7zip Extracting Archives Dependency Walker DLL Analysis de4dot .</description></item><item><title>2022-05-16 Emotet IOCs</title><link>https://c3rb3ru5d3d53c.github.io/iocs/2022-05-16-emotet/</link><pubDate>Mon, 16 May 2022 00:00:00 +0000</pubDate><guid>https://c3rb3ru5d3d53c.github.io/iocs/2022-05-16-emotet/</guid><description>Emotet LNK Hashes ab0345703155bbc1e1560b79e3daad64019b57d3e6cad56e8f093ebde0849a57 3aa3036ccff4730bd2854ef0d0149598a3352f602738362029a7881516f5bbef c10f7d70c58c55346f32fb74a514c5b672ed6a9db121a52c59a0bad93383944e 2d93da9ce5cfa8d07917b02f1a526341e0a52efbeaa90d87d1e9f6754c4539e7 fd8ea7a6cbf47e5ed2f9afe2af034bb22e98e25d72b160ed9c420fe8fd439243 c02750a14c87b6c3c723c151454c661c86d7876d54407e956ca5cab68db5de3d d5548ee41fa59c270a835a6a523e04ae6bd9b6b6bf5c569c0de8ed103f060c8a 3e50af10b26a8ec2fffdb36d39a1f5163f6dbcfd3031aa7df229f08b8c916934 cd03562ab4d4cb576ac47758a86d9ea469e95f76f78cc6f67f883ed15eab3fb5 7e5f8c42002334f1216b121116f8e7af006ce831db0b6ce53c0bcc205653a955 fc84eee7583fec2afa478d73fab380c7067d5fe23e519e7de3b3fd9caea02f31 a1985000db8002e23d94e91c1b098356026ba02b28ffe8d5bd248ca9b112c43c 1dd0aac4b117a65271fd8f92e8ab39d511a7b84b61104bfe95b0c974e52118be 85d08aa3b469bdc19e66019f3353e8042b5515ec87d2912107ce7d6406fc3f22 8accca49f8e8ca6c93533f70fefba023fd25a6cceecde4158dc11f9b5c373a4a 2a86c6a4cb26b29ea01f82f94714b5478227dc31f75c14b8f2bc746b29b1b4ab ab98f5bcc05c94a07ae68d798960365a72682eb8857bfbf0cca292252e688004 78a7f0a26d5cb1b13b6dc67fdc247fa0f173564651d434ed4c17cdecb7dff561 e0327a31c772ef3dd3dcada93de50db3625eb15400446c46ea7cb91bee742537 b8207a4e4c15dc90d25679cd6648f4f19714996f7b1c3edb7dc7eb849cab0223 4a2a3341a252cdf0199033c5b03b0324a71b1c9d53a9016b7afc7e80414cf738 c8a9a0e308febe2ce4cbc09386f889523aafdd834e3746e323f2037e1cf71354 ccd146dfaf71d99b89b07206bf1da93b5c406c024ddf27f628f9786c5bdbd123 58f60c0d342e22a691f0dd9a07e98131d96df26391a3b579a861551d1cf9b34d 01c4dd299511732499c966f9c045ee92a3a6bca022d629b9454be99a56e61c47 d4591303f13ce6d3faf20429e594a72e84c8c47b2a050348020430dc90c75a60 03726700b9a2f7d56d814379eb88a13ed068a7bf20da2826efea1f401ee27bcc ab06aeb6c4cc8bdbdf1726d2392725f3c9b998d17c515981bf356b2be96f6552 25fc0ad43de1f3111101a2e97344ec011f58115f9b085262a2fc198d0aa6d827 df4ea09615774ffbfc882c97bb0771cc468a354fe5d6f6d471df9f40e13321d7 d167a0b959296fb199f85de08dc81e734073a0192eea69e3d297359e75eda101 2001ea3653b00f5e0b3e00f4d2447c07347c763122154f7d9d00e03c080e9ed4 85a612afea68dbc94a4e9f35c3d6662dfcaa91a327bc98d573855c5609c175be 335e2195de5b1885a5a43691661c06ef2a65359bee54424bdba394228624322c fe56f1f52dd7909a1d3329fed34912c668f0aa370e2c14e4ce0352615ad403dd 1e7b92de98e2b35a9b4b287910a4d38ac052e33888ba59978660d23acc6d361f 95e4919e787cf2da96503075a5821782e2431bc6c2b27620d4fd86136f853285 5572dfa32171692cd5dc4296d0ccbc5b21b66a3ced7427dc9cd2cac0851e0961 7bc2598824cb3831eccc9566557c34b60e89ea8bfcbf79a601ed470fa09eaef5 d5cd5025a7f5bd2d6d6036036bda85811dfbca7508d9199b7a62d3413b98fd53 4ec64327a68dcf5c8093d03eef2b82a88860e25ffc2685c1d92cff849d5d4171 4a89cef2ccf686ec164d3dcdb29635212d6ea7e4d642cf1de2ac8e04b1c179ef 3be746ca01fca4b78c057cf778fab2a637a6c6c4d7726c9bc5dd1dff9aa826a7 4e6ac459bec83c601f11f1be7abcf540f20d81b3e553650022d4dc3e1460fc11 17c5e48f807a30a76eaf99de8edf16ec33ebf7e31a927cf56a65fa713f035fe0 d92ebcc12d119a251f46ab87831b48990e291ff6aa5162fdfe49a7044afd4dd0 92ccaff85a96853bd1bea843ec3ae4d5833dade8b07800cbfbe57e018b47939b 6e7530d3cfa4d006e44a4dc6e395cbe4314fcbdf70ca088435444e61be7717f6 1e4a70836e310a3f8819e0cb569e8fdcdcb4c315061c891a6e0712974ee1de96 499cf79d6e2a6ce87594a013084cbdd0a9975a7f77ee62e1a18335cfff7f2645 5679c4e097636f5bd271aa31010d4427244cd1c0ee23f0a73b8790e094679777 fe67eb3863b4ce96ad1fef06b3017e44ad8238d1e5c8c3b3cec25d55fb6df9ef 4d51cd28a84a2eb8cdce040c93a6cff6da9dffd32344da324ebc70353b13ebe2 5456021159307bc5d7c685fa21323c4a6af820041bce806cfcf7eb9cc212cdad b689292ed69ce1fa38f732fd21e68792040fba67e78eeaf98347d6b6f889474b a92e487b0206e92a8cfb2d1e1f47c9640f909fab85989b2b4f563624ce10def2 d6ec9c4c672fb6e8fa2905ed661dc3e5129cf8737ee9ba0f7de2a9dbf9d198c5 e42c37dc8562ebf9f80ffa693ef850a128c991dcd281e1cf284a8e847a2f059b a149eba44120ad670eda2af238f4345207cffe2ecffd3d18d6e99e485385f68f 9b6065d0a10185353f7ea81cddcef3799b985b91e3f215b07c615ae6997b03d9 b224f6b72a214c3a235fbfae9c00745c53363dc5b3a0572561cf113a83a7dd5f e2e348531e7291e0c39bfcb3fb7efb01c269f75fdc27a81e36a60652567b29ea 5fc962a21f2c883641f42cf02016a010668940c874a221a10167083b50779007 74e5b8b741d6ae80d1f3337363a4a0687d278535243057f7b69f657f82fa29f2 ece2ea28a40e8f472ca765c536fe95892c52e959920c5b7b2ac52d27bc92f190 f7086a8fe7e45a8f3943247c91d61038584065a4177f6d1b33c8450618d1412c 85a11d7d6eaf5849227e5852a6e11b3165a726f963cea60a90b9a5ac6bff7483 44f36455e57a638dbb3eee3f7560bed22d81cf4775f9c6f0fe45d0c446ededf9 504a479fa85f95ae127301d2dd583554f16f6a64ade50d3f644181584b0243bc 51dc6aebee0874009d4d92ec9f91d4925b662f3e87cffe558671e760124bfbc3 d7e259c8b7261b34907dfa8deb08748524b711a07361f3552e3da4a8686e61f1 5efd52ec60710ca14e157488b97c89c3dfb73e4890cc737509496641cae1db08 cc9715ac4a1dcdf9df3e03ad5dc3df3937bdcd3ad02085976c29a9ed30733c65 d9b5c18763efda603a21dec6d2a7b897575741a28e8ac85cf417eebea7649790 53d48053088c0f127c7b089d4c9bc83a0d216d332b31d78c7fc8a926d468ad34 3db253968d3d12a64d64156ca741c81da285f7526874936019e0711e40808c7e 94bf38b5b5b3af5f87cdbd3ec10855615510d34e127211fc04960a1980be2db6 0c077bc59622f48780dc0bb490fb8caff74181bd44ca257410b9d9cc56f57b2e eddb79abca18834b5765f54a705ff3d91871f1617910f0ddb3cc96b6573e885a 749aa3b5d4bb494ea198e70030defe39b1ac96d596215cba527312b69eeae06d fc8771075408f93b3e3161ebafac326fa8f73b730ae0c3c41e77b107caa26515 3ab978c280a6dcbdd9413d3caf7bec21f849472058c376c10a33854e9cc104ef 4f76c844803100690efb1aa95be8c484edf7aa4e41d161104633bbe586e1f12c 4865d4ffe4309b15c9b1bd0b534f1358818fcad1d6e47ffc555f9646fbb642da 5159c5406acc8e093971d354cdf8915783e4994b489e8618c35fba04bcb71461 9248805fc0202cb0696a61a1745a8085075000e83c5d64c308feda28f833b366 985c54987e43faa245714d36d8bc7717c356192003cce60eb3de2d0c7a56178f a6f25a9e6108bc3ec542132d3e2538a8223b3e3369118e2259cc59ed635d6705 660ba8790eb627eaa5e33f4e5c4ef8aa1d05f023a9ef58d6b167299ae1af824b 360bc7b81dd4ba56456b13f67bff186141e645c6d59ba9ddb16419a33259e652 4588d8226b2f6d2c291bc621ec0d0fae79b718df6fd8a41340d736d711b8bb06 2b909bfaf679bbe4d3fae602d4ef9a53a058c0b4ec67d999a3545d55820cad76 46bd451ac887c5a99bc344e6ada0e11aec1311f9efc7f55ce0ec1d12bd534aab 3f1d2e007cd7bf795cfab3734816dc625d105ded8b7b142bd937bcfb22d9ba8d 6e7b6253c763791fb521301d728481d1652410bdb1d9a3c3e6c4dea39d038884 4abe070893ba0d1b6d5b513015b6a8f0f86e52676e5059a7ccc32673d4434503 f4bb454e7d9a59399271aa599f5f11466df01681c296bcb5d27c7fd22d3f58b1 7a8154ad8a005e87ab8adb7496ec3113073a3fc0dc3cf0fff565120e27a23345 770992d5d554e3e9ee1492493f0670f901f6beb5cff2577a4cdf9aa5bfaaa76b 1c42fab57a9b7abc7242901f3a41c1b694555c0c433b0c0f294248646c2252c3 ebbaab6135e7540bedc8732f28b60769c4b44185538e53772b5a6222f92dfe4b Emotet Download URLs by Popularity 46 hxxp://www[.</description></item><item><title>Qakbot/QBot Downloader</title><link>https://c3rb3ru5d3d53c.github.io/malware-blog/2020-02-12-qakbot-downloader/</link><pubDate>Wed, 12 Feb 2020 00:00:00 +0000</pubDate><guid>https://c3rb3ru5d3d53c.github.io/malware-blog/2020-02-12-qakbot-downloader/</guid><description>Situation:
I came across an interesting obfuscated sample on Any.Run.
Metadata:
db2614353dc6c29dbe323dbeafe6b781 Analysis:
The sample has a ton of comments making the file size total around ~4mb.
This was easily parsed out with sed &amp;rsquo;s/^\x27//&amp;rsquo;.
The next step is to idenify where code is evaluated which was here exECuTeglOBal sHLW(iDxY).
Changed this to WScript.Echo then also had to backtrack for a variable which defined before the evaluation.
This variable contained an array of strings which contain object names and the downloader URL, User-Agent etc.</description></item><item><title>ViperSoftx Vjw0rm Variant</title><link>https://c3rb3ru5d3d53c.github.io/malware-blog/2020-02-10-vjw0rm-vipersoftx-variant/</link><pubDate>Mon, 10 Feb 2020 00:00:00 +0000</pubDate><guid>https://c3rb3ru5d3d53c.github.io/malware-blog/2020-02-10-vjw0rm-vipersoftx-variant/</guid><description>Situation:
While watching Any.Run for interesting scripts to deobfuscate, I noted that its traffic did appear to be like other variants of vjw0rm however wasn&amp;rsquo;t sure of what else it could do.
Metadata:
Sample: 3236312b9dc691dd8b9214f08ff01e5d Analysis
The obfuscation techniques are pretty standard, the first stage deobfuscates base64 data then performs mathematic operations on it (I don&amp;rsquo;t give a crap how they work I just let it do the heavy lifting for me), interestingly the base64 string is reversed.</description></item><item><title>Mr. Robot Variant of Vjw0rm</title><link>https://c3rb3ru5d3d53c.github.io/malware-blog/2020-02-01-vjw0rm-mr-robot-variant/</link><pubDate>Sat, 01 Feb 2020 00:00:00 +0000</pubDate><guid>https://c3rb3ru5d3d53c.github.io/malware-blog/2020-02-01-vjw0rm-mr-robot-variant/</guid><description>I was monitoring Any.Run when a .js file peeked my interest due to the limited network traffic.
Analysis Metadata:
Name: 1.js MD5 : 3f438e857c45a4812dbfa331fd3b8011 The first stage decrypts a long Unicode string then calls eval on its result as seen in Figure 1.
function y(o,h) { var t;var s=&amp;quot;&amp;quot;; var d=(o+&amp;quot;&amp;quot;).split(&amp;quot;&amp;quot;); for (var i=0;i&amp;lt;d.length;i++){ t=d[i].charCodeAt(0); s+=String.fromCharCode(256-+t+(+h)); } return s; } WScript.Sleep(10000); eval(&amp;quot;eval(y(\&amp;quot;&amp;lt;long_unicode_string&amp;gt;\&amp;quot;&amp;quot;); Figure 1: Deobfuscation routine
When threat actor(s) use eval, most of the time I can easily bypass this with replacing it with console.</description></item></channel></rss>