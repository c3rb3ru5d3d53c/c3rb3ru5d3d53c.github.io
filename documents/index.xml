<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Documents on Malware Hell</title><link>https://c3rb3ru5d3d53c.github.io/documents/</link><description>Recent content in Documents on Malware Hell</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>&amp;copy; 2022 &lt;a href="https://twitter.com/c3rb3ru5d3d53c">c3rb3ru5d3d53c&lt;/a></copyright><lastBuildDate>Thu, 07 Jul 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://c3rb3ru5d3d53c.github.io/documents/index.xml" rel="self" type="application/rss+xml"/><item><title>Handling Malware Samples</title><link>https://c3rb3ru5d3d53c.github.io/documents/malware-sample-handling/</link><pubDate>Thu, 07 Jul 2022 00:00:00 +0000</pubDate><guid>https://c3rb3ru5d3d53c.github.io/documents/malware-sample-handling/</guid><description>When you are first starting out in malware analysis or reverse engineering it can be a very nerve racking experience to deal with malware samples. You might always have that little voice in your head thinking&amp;hellip;
What if I double click by accident?
What if I press ENTER when I was not supposed to?
What if the malware breaks out of the VM?
Malware is bad
You don&amp;rsquo;t want to be infected do you?
If you have these little voices in your head, you are not alone.</description></item><item><title>Malware Analysis and Reverse Engineering Workflow</title><link>https://c3rb3ru5d3d53c.github.io/documents/malware-analysis-reversing-workflow/</link><pubDate>Wed, 06 Jul 2022 00:00:00 +0000</pubDate><guid>https://c3rb3ru5d3d53c.github.io/documents/malware-analysis-reversing-workflow/</guid><description>I have noticed that there is a lot of material on individual parts of the malware analysis and reverse engineering process. However, they do not cover really what someone&amp;rsquo;s workflow is from start to finish. This guide will be an overview of my general workflow.
Prerequsites Ensure you have finished setting up your malware lab This guide is not how everyone does it, everyone will refine their own workflow, which works best for them overtime. Methodology When working on malware it is good to have a methodology to guide your operations.</description></item><item><title>CheatSheet</title><link>https://c3rb3ru5d3d53c.github.io/documents/cheatsheet/</link><pubDate>Fri, 24 Jun 2022 00:00:00 +0000</pubDate><guid>https://c3rb3ru5d3d53c.github.io/documents/cheatsheet/</guid><description>SHA256 Files in Folder find . -maxdepth 1 -type f | while read i; mv $i (sha256sum $i | grep -Po '^[a-f0-9]+'); end Download Hashes from Clipboard xclip -o -s -c | xargs -I {} echo &amp;quot;vt download {}&amp;quot; | parallel -j 8 {} Binlex Top 10 Traits find samples/ -type f | while read i; binlex -i $i \| jq -r 'trait' | sort | uniq; end | sort | uniq -c | sort -rn | head -10 Capture PCAP tshark -i lo -F libpcap -w (date +&amp;quot;%Y-%m-%d&amp;quot;).</description></item><item><title>Video Editing on Linux Guide</title><link>https://c3rb3ru5d3d53c.github.io/documents/linux-video-editing/</link><pubDate>Thu, 23 Jun 2022 00:00:00 +0000</pubDate><guid>https://c3rb3ru5d3d53c.github.io/documents/linux-video-editing/</guid><description>Video editing in Linux has always been a hot topic in the community. It also has been discussed by a lot of Linux content creators. I have been using Linux for the past 10 years as my operating system for everything I do. With this has come challenges, of course years ago it was virtually impossible.
The landscape has shifted for Linux content creators. You really no longer need to purchase Davanchi Studio. The best new player on the block I&amp;rsquo;d recommend is Blender.</description></item><item><title>Malware Analysis for Beginners</title><link>https://c3rb3ru5d3d53c.github.io/documents/malware-analysis-beginner-guide/</link><pubDate>Tue, 21 Jun 2022 00:00:00 +0000</pubDate><guid>https://c3rb3ru5d3d53c.github.io/documents/malware-analysis-beginner-guide/</guid><description>Hello everyone, malware analysis is a hot topic lately as the threats we work against in the cybersecurity industry become more advanced with each passing day. This creates demand for these types of skills in the industry. I&amp;rsquo;ve mentored and taught many malware analysts and what I&amp;rsquo;ve learned from this experience do not align with certifications. Although certifications are helpful, they are not what I&amp;rsquo;d recommend starting with from scratch. This guide aims to get you started in malware analysis without having to pay anyone any money.</description></item><item><title>KVM Malware Lab Guide</title><link>https://c3rb3ru5d3d53c.github.io/documents/kvm-malware-lab/</link><pubDate>Sat, 18 Jun 2022 00:00:00 +0000</pubDate><guid>https://c3rb3ru5d3d53c.github.io/documents/kvm-malware-lab/</guid><description>This is my guide for setting up your very own malware lab using KVM.
Before you start, this guide assumes you have an AirVPN subscription or another equivalent one, which provides a .ovpn file.
NOTE: I like to have internet enabled on my analysis VMs and this comes with extra security considerations and potential risk if you do not perform the setup correctly. It is recommended that you have your KVM host machine on a DMZ.</description></item><item><title>Malware Analysis Tool List</title><link>https://c3rb3ru5d3d53c.github.io/documents/malware-analysis-tools/</link><pubDate>Fri, 17 Jun 2022 00:00:00 +0000</pubDate><guid>https://c3rb3ru5d3d53c.github.io/documents/malware-analysis-tools/</guid><description>This document contains an extensive list of the malware analysis tools I use on a regular basis. ðŸ˜„
Tool List tool description x64dbg Debugger Ghidra Reverse Engineering DNSpy Reverse Engineering windbg Debugging Python Scripting OWASP Zap Web Debugging HxD Hex Editing HashMyFiles File Hashing VSCodium Coding PEStudio Triage IDR Interactive Delphi Reconstructor PEBear PE Editing and Triage pe-seive Malware Unpacking Detect it Easy Triage TOR Dark Web Browsing Cutter Reverse Engineering VB Decompiler Pro Reverse Engineering VB Samples Resource Hacker Triage and Unpacking dControl Disabling Windows Defender scDbg Shellcode Emulation xlmDeobfuscator Deobfuscation of XLM Maldocs oletools Maldoc Analysis Sysinternals Dynamic Analysis Nauz File Detector Triage PDF Stream Dumper PDF Maldoc Analysis Wireshark Network Analysis MalUnpack Unpacking Malware Orca MSI Editor 7zip Extracting Archives Dependency Walker DLL Analysis de4dot .</description></item></channel></rss>