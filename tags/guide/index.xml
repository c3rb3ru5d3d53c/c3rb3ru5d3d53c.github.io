<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Guide - Tag - Malware Hell</title><link>https://c3rb3r3u5d3d53c.github.io/tags/guide/</link><description>Guide - Tag - Malware Hell</description><generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>c3rb3r3u5d3d53c@gmail.com (c3rb3r3u5d3d53c)</managingEditor><webMaster>c3rb3r3u5d3d53c@gmail.com (c3rb3r3u5d3d53c)</webMaster><lastBuildDate>Sat, 04 Feb 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://c3rb3r3u5d3d53c.github.io/tags/guide/" rel="self" type="application/rss+xml"/><item><title>Fish as a User Shell in Linux</title><link>https://c3rb3r3u5d3d53c.github.io/2023/02/fish-user-shell/</link><pubDate>Sat, 04 Feb 2023 00:00:00 +0000</pubDate><author>c3rb3ru5d3d53c</author><guid>https://c3rb3r3u5d3d53c.github.io/2023/02/fish-user-shell/</guid><description><![CDATA[<div class="featured-image">
                <img src="/images/9c1dde5dfce4c0b161452996e00692e8bad35dbccc23f3a98fcf9d4d1efcef66.png" referrerpolicy="no-referrer">
            </div>Introduction The purpose of this article is to provide reasoning behind why I&rsquo;m a fish shell user and how to I setup fish 🐟 shell on all my Linux machines. Before we begin, we need to understand what fish shell is.
Fish is a Unix shell with a focus on interactivity and usability. Fish is designed to give the user features by default, rather than by configuration. Fish is considered an exotic shell since it does not rigorously adhere to POSIX shell standards, at the discretion of the maintainers.]]></description></item><item><title>A Reverse Engineering Guide for Rust Binaries</title><link>https://c3rb3r3u5d3d53c.github.io/2022/08/malware-reversing-rust/</link><pubDate>Thu, 04 Aug 2022 00:00:00 +0000</pubDate><author>c3rb3ru5d3d53c</author><guid>https://c3rb3r3u5d3d53c.github.io/2022/08/malware-reversing-rust/</guid><description>Introduction The Rust programming language is like rust on a vehicle for malware analysts and reverse engineers. The adoption of the language by malware authors spreads like cancer the longer it is in active development. This is due to convenient static linking and support for many operating systems, yielding a binary with little to no dependencies. These features are excellent for the distribution of malware. Every time we need to reverse engineer a Rust binary, we would rather embrace the sweet release of death.</description></item></channel></rss>