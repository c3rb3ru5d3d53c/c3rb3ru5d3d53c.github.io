<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Reversing - Tag - Malware Hell</title><link>https://c3rb3r3u5d3d53c.github.io/tags/reversing/</link><description>Reversing - Tag - Malware Hell</description><generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>c3rb3r3u5d3d53c@gmail.com (c3rb3r3u5d3d53c)</managingEditor><webMaster>c3rb3r3u5d3d53c@gmail.com (c3rb3r3u5d3d53c)</webMaster><lastBuildDate>Wed, 28 Jun 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://c3rb3r3u5d3d53c.github.io/tags/reversing/" rel="self" type="application/rss+xml"/><item><title>Malware Questions and Answers</title><link>https://c3rb3r3u5d3d53c.github.io/2023/06/malware-questions/</link><pubDate>Wed, 28 Jun 2023 00:00:00 +0000</pubDate><author>c3rb3ru5d3d53c</author><guid>https://c3rb3r3u5d3d53c.github.io/2023/06/malware-questions/</guid><description>Introduction This page is dedicated for malware questions in which I address live on stream.
2023-06-28 but no thanks, i&amp;#39;ll pass on your request. I have a question though...
If someone exploits software, firmware, or hardware...does that make them a malware developer?
&amp;mdash; Jonathan Scott (@jonathandata1) June 28, 2023 Q: If someone exploits software, firmware, or hardware&amp;hellip;does that make them a malware developer?
FACT: An exploit is code designed to take advantage of a security flaw or vulnerability, in an application or computer system, typically for malicious purposes.</description></item><item><title>ANGR Python Scripting Cheatsheet</title><link>https://c3rb3r3u5d3d53c.github.io/2023/06/angr-python-cheatsheet/</link><pubDate>Mon, 26 Jun 2023 00:00:00 +0000</pubDate><author>c3rb3ru5d3d53c</author><guid>https://c3rb3r3u5d3d53c.github.io/2023/06/angr-python-cheatsheet/</guid><description>ANGR Python CheatSheet Starting a Project 1 2 3 4 5 import angr, claripy # Create the Project p = angr.Project(&amp;#34;stealer.exe&amp;#34;) # Terminate Project Execution p.terminate_execution() Creating Project Hooks 1 2 3 4 5 6 7 # Hook an Address skip_bytes = 4 @p.hook(0xdeadbeef, length=skip_bytes) def hook_state(s): # Change State Here # Check If Address Hooked (Bool) p.is_hooked(0xdeadbeef) Creating a State 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 start_address = 0xdeadbeef end_address = 0xbeefdead avoid_address = 0xcafef00d # Create Blank State s = p.</description></item><item><title>Ghidra Python Scripting Cheatsheet</title><link>https://c3rb3r3u5d3d53c.github.io/2023/02/ghidra-python-cheatsheet.en.md/</link><pubDate>Sat, 04 Feb 2023 00:00:00 +0000</pubDate><author>c3rb3ru5d3d53c</author><guid>https://c3rb3r3u5d3d53c.github.io/2023/02/ghidra-python-cheatsheet.en.md/</guid><description><![CDATA[This is a cheatsheet I use for Ghidra scripting.
NOTE: Some of these functions use each other üòÑ
User Input 1 askFile(&#39;Title&#39;, &#39;Okay&#39;).toString() Get Python Bytes from Address 1 2 def get_bytes(address, size): return bytes(map(lambda b: b &amp; 0xff, getBytes(address, size))) Get Section Bytes (Program Tree) 1 2 3 def get_section_bytes(section_name): section = getMemoryBlock(section_name) return get_bytes(section.getStart(), section.getSize()) Get Executable Path 1 currentProgram.getExecutablePath() Get Program Start Address 1 currentProgram.getMinAddress() Get Program End Address 1 currentProgram.]]></description></item><item><title>A Reverse Engineering Guide for Rust Binaries</title><link>https://c3rb3r3u5d3d53c.github.io/2022/08/malware-reversing-rust/</link><pubDate>Thu, 04 Aug 2022 00:00:00 +0000</pubDate><author>c3rb3ru5d3d53c</author><guid>https://c3rb3r3u5d3d53c.github.io/2022/08/malware-reversing-rust/</guid><description>Introduction The Rust programming language is like rust on a vehicle for malware analysts and reverse engineers. The adoption of the language by malware authors spreads like cancer the longer it is in active development. This is due to convenient static linking and support for many operating systems, yielding a binary with little to no dependencies. These features are excellent for the distribution of malware. Every time we need to reverse engineer a Rust binary, we would rather embrace the sweet release of death.</description></item><item><title>Malware Analysis and Reverse Engineering Workflow</title><link>https://c3rb3r3u5d3d53c.github.io/2022/07/malware-reversing-workflow/</link><pubDate>Wed, 06 Jul 2022 00:00:00 +0000</pubDate><author>c3rb3ru5d3d53c</author><guid>https://c3rb3r3u5d3d53c.github.io/2022/07/malware-reversing-workflow/</guid><description>I have noticed that there is a lot of material on individual parts of the malware analysis and reverse engineering process. However, they do not cover really what someone&amp;rsquo;s workflow is from start to finish. This guide will be an overview of my general workflow.
Prerequsites Ensure you have finished setting up your malware lab This guide is not how everyone does it, everyone will refine their own workflow, which works best for them overtime.</description></item><item><title>Making Fun of Your APT Malware - Bitter APT Using ZxxZ Backdoor to Target Pakistan Public Accounts Committee</title><link>https://c3rb3r3u5d3d53c.github.io/2022/06/bitter-apt-zxxz-backdoor/</link><pubDate>Sun, 26 Jun 2022 00:00:00 +0000</pubDate><author>c3rb3ru5d3d53c</author><guid>https://c3rb3r3u5d3d53c.github.io/2022/06/bitter-apt-zxxz-backdoor/</guid><description>Introduction Bitter APT (T-APT-17/APT-C-08/Orange Yali) is a group known to operate in South Asia and is suspected to be an Indian üáÆ‚Äçüá≥ APT. They primarialy target Pakistan üáµ‚Äçüá∞, Saudi Arabia üá∏‚Äçüá¶ and China.
Analysis This will be an indepth analysis of Bitter APT&amp;rsquo;s backdoor named ZxxZ. We will cover almost every aspect of the attack chain including, exploit shellcode analysis, building our own C2 server to communicate with the malware and writing detection signatures for the community.</description></item><item><title>From Nothing to a Career in Cyber</title><link>https://c3rb3r3u5d3d53c.github.io/2022/06/career/</link><pubDate>Tue, 21 Jun 2022 00:00:00 +0000</pubDate><author>c3rb3ru5d3d53c</author><guid>https://c3rb3r3u5d3d53c.github.io/2022/06/career/</guid><description>In this blog, I&amp;rsquo;ll discuss some of my troubles in life getting started and how I really got the drive to move forward.
How It Started I took advanced placement courses all throughout high school, I had one goal at this point, get a computer science degree. At this time universities were really telling parents that their kids need a secondary education. This was all happening between the year 2000 and 2005.</description></item></channel></rss>