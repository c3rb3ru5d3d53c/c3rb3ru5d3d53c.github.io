<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>lockbit on Malware Hell</title><link>https://c3rb3ru5d3d53c.github.io/tags/lockbit/</link><description>Recent content in lockbit on Malware Hell</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>&amp;copy; 2022 &lt;a href="https://twitter.com/c3rb3ru5d3d53c">c3rb3ru5d3d53c&lt;/a></copyright><lastBuildDate>Wed, 13 Jul 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://c3rb3ru5d3d53c.github.io/tags/lockbit/index.xml" rel="self" type="application/rss+xml"/><item><title>Reversing Additional Lockbit 3.0 API Hashing</title><link>https://c3rb3ru5d3d53c.github.io/malware-blog/lockbit-v3-api-hashing/</link><pubDate>Wed, 13 Jul 2022 00:00:00 +0000</pubDate><guid>https://c3rb3ru5d3d53c.github.io/malware-blog/lockbit-v3-api-hashing/</guid><description>I was watching @herrcore&amp;rsquo;s OALabs stream on Lockbit 3.0. After he wrote a utility to decrypt additional data from the ransomware, he noticed one of the buffers was a Portable Executable (PE) file. It had an interesting API hashing routine, we would be reversing for the next stream.
I decided to have a closer look. ðŸ˜„
Analysis This is an interesting sample, I have not mapped out its full functionality yet.
However, I was able to get a decent amount of reversing done, which should give us more of an insight.</description></item></channel></rss>