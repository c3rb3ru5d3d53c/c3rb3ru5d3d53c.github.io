<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Malware - Tag - Malware Hell</title><link>https://c3rb3r3u5d3d53c.github.io/tags/malware/</link><description>Malware - Tag - Malware Hell</description><generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>c3rb3r3u5d3d53c@gmail.com (c3rb3r3u5d3d53c)</managingEditor><webMaster>c3rb3r3u5d3d53c@gmail.com (c3rb3r3u5d3d53c)</webMaster><lastBuildDate>Sun, 05 Feb 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://c3rb3r3u5d3d53c.github.io/tags/malware/" rel="self" type="application/rss+xml"/><item><title>Hunting Opaque Predicates with YARA</title><link>https://c3rb3r3u5d3d53c.github.io/2023/02/opaque-predicate-hunting-with-yara/</link><pubDate>Sun, 05 Feb 2023 00:00:00 +0000</pubDate><author>c3rb3ru5d3d53c</author><guid>https://c3rb3r3u5d3d53c.github.io/2023/02/opaque-predicate-hunting-with-yara/</guid><description>&lt;div class="featured-image">
&lt;img src="/images/4c3144fc208245413dfd03ae14a961cd59e006439fa932f663c9b9af4ef7caac.png" referrerpolicy="no-referrer">
&lt;/div>Introduction Malware tends to obfuscate itself using many different techniques from opaque predicates, garbage code, control flow manipulation with the stack and more. These techniques definitely make analysis more challening for reverse engineers. However, from a detection and hunting standpoint to find interesting samples to reverse engineer we can leverage our knowlege of these techniques to hunt for obfuscated code. In our case today, we will be developing a yara signature to hunt for one specific technique of opaque predicates, there are many variations and situations where this does not match and should only serve as a hunting signatures as more heuristic and programitic approaches for this are better for detection.</description></item><item><title>Deobfuscating Scripts</title><link>https://c3rb3r3u5d3d53c.github.io/2022/07/malware-script-deobfuscation/</link><pubDate>Sat, 09 Jul 2022 00:00:00 +0000</pubDate><author>c3rb3ru5d3d53c</author><guid>https://c3rb3r3u5d3d53c.github.io/2022/07/malware-script-deobfuscation/</guid><description>I reached out on Twitter asking for suggestions on new topics to cover.
One of these topics was on deobfuscation of scripts. This is a great topic as this skill can generally be learned by anyone who understands writing code or scripts. I&amp;rsquo;ll cover more advanced topics as I move forward with these guides.
NOTE: This guide does not cover all aspects of deobfuscation. However, once you have finished reading and practicing the concepts in this guide, you will be able to build some of your own techniques to better expand your skills.</description></item><item><title>Handling Malware Samples</title><link>https://c3rb3r3u5d3d53c.github.io/2022/07/malware-sample-handling/</link><pubDate>Thu, 07 Jul 2022 00:00:00 +0000</pubDate><author>c3rb3ru5d3d53c</author><guid>https://c3rb3r3u5d3d53c.github.io/2022/07/malware-sample-handling/</guid><description>When you are first starting out in malware analysis or reverse engineering, it can be a very nerve racking experience to deal with malware samples. You might always have that little voice in your head thinking&amp;hellip;
What if I double click by accident?
What if I press ENTER when I was not supposed to?
What if the malware breaks out of the VM?
Malware is bad
You don&amp;rsquo;t want to be infected, do you?</description></item><item><title>Malware Analysis and Reverse Engineering Workflow</title><link>https://c3rb3r3u5d3d53c.github.io/2022/07/malware-reversing-workflow/</link><pubDate>Wed, 06 Jul 2022 00:00:00 +0000</pubDate><author>c3rb3ru5d3d53c</author><guid>https://c3rb3r3u5d3d53c.github.io/2022/07/malware-reversing-workflow/</guid><description>I have noticed that there is a lot of material on individual parts of the malware analysis and reverse engineering process. However, they do not cover really what someone&amp;rsquo;s workflow is from start to finish. This guide will be an overview of my general workflow.
Prerequsites Ensure you have finished setting up your malware lab This guide is not how everyone does it, everyone will refine their own workflow, which works best for them overtime.</description></item><item><title>Making Fun of Your APT Malware - Bitter APT Using ZxxZ Backdoor to Target Pakistan Public Accounts Committee</title><link>https://c3rb3r3u5d3d53c.github.io/2022/06/bitter-apt-zxxz-backdoor/</link><pubDate>Sun, 26 Jun 2022 00:00:00 +0000</pubDate><author>c3rb3ru5d3d53c</author><guid>https://c3rb3r3u5d3d53c.github.io/2022/06/bitter-apt-zxxz-backdoor/</guid><description>Introduction Bitter APT (T-APT-17/APT-C-08/Orange Yali) is a group known to operate in South Asia and is suspected to be an Indian üáÆ‚Äçüá≥ APT. They primarialy target Pakistan üáµ‚Äçüá∞, Saudi Arabia üá∏‚Äçüá¶ and China.
Analysis This will be an indepth analysis of Bitter APT&amp;rsquo;s backdoor named ZxxZ. We will cover almost every aspect of the attack chain including, exploit shellcode analysis, building our own C2 server to communicate with the malware and writing detection signatures for the community.</description></item><item><title>Beginner Malware Analyst CopyPasta</title><link>https://c3rb3r3u5d3d53c.github.io/2022/06/malware-analysis-beginner-guide/</link><pubDate>Fri, 24 Jun 2022 00:00:00 +0000</pubDate><author>c3rb3ru5d3d53c</author><guid>https://c3rb3r3u5d3d53c.github.io/2022/06/malware-analysis-beginner-guide/</guid><description>Hello everyone, malware analysis is a hot topic lately as the threats we work against in the cybersecurity industry become more advanced with each passing day. This creates demand for these types of skills in the industry. I&amp;rsquo;ve mentored and taught many malware analysts and what I&amp;rsquo;ve learned from this experience do not align with certifications. Although certifications are helpful, they are not what I&amp;rsquo;d recommend starting with from scratch. This guide aims to get you started in malware analysis without having to pay anyone any money.</description></item><item><title>From Nothing to a Career in Cyber</title><link>https://c3rb3r3u5d3d53c.github.io/2022/06/career/</link><pubDate>Tue, 21 Jun 2022 00:00:00 +0000</pubDate><author>c3rb3ru5d3d53c</author><guid>https://c3rb3r3u5d3d53c.github.io/2022/06/career/</guid><description>In this blog, I&amp;rsquo;ll discuss some of my troubles in life getting started and how I really got the drive to move forward.
How It Started I took advanced placement courses all throughout high school, I had one goal at this point, get a computer science degree. At this time universities were really telling parents that their kids need a secondary education. This was all happening between the year 2000 and 2005.</description></item><item><title>Malware Analysis Tool List</title><link>https://c3rb3r3u5d3d53c.github.io/2022/06/malware-analysis-tools/</link><pubDate>Fri, 17 Jun 2022 00:00:00 +0000</pubDate><author>c3rb3ru5d3d53c</author><guid>https://c3rb3r3u5d3d53c.github.io/2022/06/malware-analysis-tools/</guid><description>This document contains an extensive list of the malware analysis tools I use on a regular basis. üòÑ
Tool List tool description x64dbg Debugger Ghidra Reverse Engineering DNSpy Reverse Engineering windbg Debugging Python Scripting OWASP Zap Web Debugging HxD Hex Editing HashMyFiles File Hashing VSCodium Coding PEStudio Triage IDR Interactive Delphi Reconstructor PEBear PE Editing and Triage pe-seive Malware Unpacking Detect it Easy Triage TOR Dark Web Browsing Cutter Reverse Engineering VB Decompiler Pro Reverse Engineering VB Samples Resource Hacker Triage and Unpacking dControl Disabling Windows Defender scDbg Shellcode Emulation xlmDeobfuscator Deobfuscation of XLM Maldocs oletools Maldoc Analysis Sysinternals Dynamic Analysis Nauz File Detector Triage PDF Stream Dumper PDF Maldoc Analysis Wireshark Network Analysis MalUnpack Unpacking Malware Orca MSI Editor 7zip Extracting Archives Dependency Walker DLL Analysis de4dot .</description></item></channel></rss>