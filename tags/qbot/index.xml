<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>QBot - Tag - Malware Hell</title><link>https://c3rb3r3u5d3d53c.github.io/tags/qbot/</link><description>QBot - Tag - Malware Hell</description><generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>c3rb3r3u5d3d53c@gmail.com (c3rb3r3u5d3d53c)</managingEditor><webMaster>c3rb3r3u5d3d53c@gmail.com (c3rb3r3u5d3d53c)</webMaster><lastBuildDate>Wed, 12 Feb 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://c3rb3r3u5d3d53c.github.io/tags/qbot/" rel="self" type="application/rss+xml"/><item><title>Qakbot/Qbot Downloader</title><link>https://c3rb3r3u5d3d53c.github.io/2020/02/qakbot-downloader/</link><pubDate>Wed, 12 Feb 2020 00:00:00 +0000</pubDate><author>c3rb3ru5d3d53c</author><guid>https://c3rb3r3u5d3d53c.github.io/2020/02/qakbot-downloader/</guid><description>Situation: I came across an interesting obfuscated sample on Any.Run.
Metadata: db2614353dc6c29dbe323dbeafe6b781 Analysis: The sample has a ton of comments making the file size total around ~4mb.
This was easily parsed out with sed 's/^\x27//'.
The next step is to idenify where code is evaluated which was here exECuTeglOBal sHLW(iDxY).
Changed this to WScript.Echo then also had to backtrack for a variable which defined before the evaluation.
This variable contained an array of strings which contain object names and the downloader URL, User-Agent etc.</description></item></channel></rss>