<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>qbot on Malware Hell</title><link>https://c3rb3ru5d3d53c.github.io/tags/qbot/</link><description>Recent content in qbot on Malware Hell</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>&amp;copy; 2022 &lt;a href="https://twitter.com/c3rb3ru5d3d53c">c3rb3ru5d3d53c&lt;/a></copyright><lastBuildDate>Wed, 12 Feb 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://c3rb3ru5d3d53c.github.io/tags/qbot/index.xml" rel="self" type="application/rss+xml"/><item><title>Qakbot/QBot Downloader</title><link>https://c3rb3ru5d3d53c.github.io/malware-blog/2020-02-12-qakbot-downloader/</link><pubDate>Wed, 12 Feb 2020 00:00:00 +0000</pubDate><guid>https://c3rb3ru5d3d53c.github.io/malware-blog/2020-02-12-qakbot-downloader/</guid><description>Situation:
I came across an interesting obfuscated sample on Any.Run.
Metadata:
db2614353dc6c29dbe323dbeafe6b781 Analysis:
The sample has a ton of comments making the file size total around ~4mb.
This was easily parsed out with sed &amp;rsquo;s/^\x27//&amp;rsquo;.
The next step is to idenify where code is evaluated which was here exECuTeglOBal sHLW(iDxY).
Changed this to WScript.Echo then also had to backtrack for a variable which defined before the evaluation.
This variable contained an array of strings which contain object names and the downloader URL, User-Agent etc.</description></item></channel></rss>